name: EKS Terraform Deployment
on:
  push:
    branches:
      - main
    paths:
      - 'vpc/**'
      - 'acm/**'
      - 'eks/**'
      - 'monitoring/**'
  pull_request:
    branches:
      - main
    paths:
      - 'vpc/**'
      - 'acm/**'
      - 'eks/**'
      - 'monitoring/**'
  workflow_dispatch:
    inputs:
      namespace:
        description: 'Kubernetes Namespace to deploy to'
        required: true
        default: 'default'

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_DEFAULT_REGION: us-east-1
  NAMESPACE: ${{ github.event.inputs.namespace || 'default' }}

jobs:
  changes:
    name: Find Changes
    runs-on: ubuntu-latest
    outputs:
      names: ${{ steps.filter.outputs.changes }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Find Changes
        uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            vpc:
              - 'vpc/**'
            acm:
              - 'acm/**'
            eks:
              - 'eks/**'
            monitoring:
              - 'monitoring/**'

  terraform:
    needs: changes
    runs-on: ubuntu-latest
    name: ${{ matrix.name }} - ${{ matrix.environment }}
    if: ${{ fromJSON(needs.changes.outputs.names) != '[]' }}
    strategy:
      max-parallel: 1
      matrix:
        name: ${{ fromJSON(needs.changes.outputs.names) }}
        environment: [dev]
    defaults:
      run:
        shell: bash
        working-directory: ${{ matrix.name }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_wrapper: true

      - name: Initialize Terraform
        run: |
          pwd
          ls -lR 
          terraform init -backend-config=${{ matrix.environment }}/backend.tfvars

      - name: Validate Terraform
        run: terraform validate

      - name: Terraform Plan
        run: terraform plan -var-file=${{ matrix.environment }}/terraform.tfvars

      - name: Execute Terraform Action
        if: github.ref == 'refs/heads/main'
        run: terraform apply -auto-approve -var-file=${{ matrix.environment }}/terraform.tfvars

      - name: Install kubectl
        run: |
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/

      - name: Install Helm
        run: |
          curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash

      - name: Update kubeconfig for EKS
        run: |
          aws eks update-kubeconfig --region us-east-1 --name <your-eks-cluster-name>

      - name: Create namespace if not exists
        run: |
          kubectl get namespace $NAMESPACE || kubectl create namespace $NAMESPACE

      - name: Deploy with Helm
        run: |
          helm upgrade --install your-app ../../charts/your-app \
            --namespace $NAMESPACE \
            --set image.repository=$ECR_REGISTRY/$ECR_REPOSITORY \
            --set image.tag=${{ github.sha }}
